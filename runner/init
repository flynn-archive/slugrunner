#!/bin/bash
set -eo pipefail

## Load slug from STDIN or URL

export HOME=/app
mkdir -p $HOME

if [[ $SLUG_URL ]]; then
	curl -s "$SLUG_URL" | tar -xzC $HOME
	unset SLUG_URL
else
	cat | tar -xzC $HOME
fi
cd $HOME

## Load profile.d and release config

mkdir -p .profile.d
if [[ -f .release ]]; then
	ruby -e "require 'yaml';(YAML.load_file('.release')['config_vars'] || {}).each{|k,v| puts '#{k}=#{v}'}" > .profile.d/config_vars
fi
for file in .profile.d/*; do 
	source $file
done
hash -r

## Inject "start" command to run processes defined in Procfile

case "$1" in
	start)
		if [[ -f Procfile ]]; then
			command="$(ruby -e "require 'yaml';puts YAML.load_file('Procfile')['$2']")"
		else
    		command="$(ruby -e "require 'yaml';puts (YAML.load_file('.release')['default_process_types'] || {})['$2']")"
		fi
		;;

	*)
		command="$@"
		;;
esac

## Use sdutil to register with service discovery

if [[ $SD_NAME && $PORT ]]; then
	if [[ $SD_HOST ]]; then
		runner="sdutil exec -h $SD_HOST $SD_NAME:$PORT bash -c"
		unset SD_HOST
	else
		runner="sdutil exec $SD_NAME:$PORT bash -c"
	fi
	unset SD_NAME
else
	runner="bash -c"
fi

## Run!

$runner "$command"
